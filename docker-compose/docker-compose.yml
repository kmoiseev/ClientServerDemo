version: '3.7'

services:

  spring-server:
    build:
      context: ../spring-server/
      dockerfile: Dockerfile
    environment:
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_SCHEMA=${DATABASE_SCHEMA}
      - DATABASE_UNAME=${DATABASE_UNAME}
      - DATABASE_PWD=${DATABASE_PWD}
      - SERVER_PORT=${SERVER_PORT}
      - SECURITY_UNAME=${SECURITY_UNAME}
      - SECURITY_PWD=${SECURITY_PWD}
      - SECURITY_ROLE=${SECURITY_ROLE}
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    restart: always
    depends_on:
      - db
    networks:
      - backend
      - frontend

  react-app:
    build:
      context: ../react-app/
      dockerfile: Dockerfile
      args:
        - REACT_APP_SERVER_PORT=${SERVER_PORT}
        - REACT_APP_SECURITY_UNAME=${SECURITY_UNAME}
        - REACT_APP_SECURITY_PWD=${SECURITY_PWD}
    ports:
      - "${BROWSER_APP_PORT}:80"
    restart: always
    depends_on:
      - spring-server
    networks:
      - frontend

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: ${DATABASE_SCHEMA}
      MYSQL_USER: ${DATABASE_UNAME}
      MYSQL_PASSWORD: ${DATABASE_PWD}
      MYSQL_ROOT_PASSWORD: ${DATABASE_PWD}
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend

volumes:
  db-data:

networks:
  backend:
  frontend: