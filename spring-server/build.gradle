plugins {
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'com.kmoiseev.demo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

sourceSets {
    testIntegration {
        java {
            srcDir 'src/test-integration/java'
            compileClasspath += sourceSets.main.output
            runtimeClasspath += sourceSets.main.output
            compileClasspath += sourceSets.test.output
            runtimeClasspath += sourceSets.test.output
        }
        resources {
            srcDir 'src/test-integration/resources'
        }
    }
}

repositories {
    mavenCentral()
}

configurations {
    testIntegrationImplementation.extendsFrom implementation
    testIntegrationImplementation.extendsFrom runtimeOnly
}

dependencies {
    implementation (
            'org.springframework.boot:spring-boot-starter-data-jdbc',
            'org.springframework.boot:spring-boot-starter-security',
            'org.springframework.boot:spring-boot-starter-web',
            'org.liquibase:liquibase-core',
            'org.projectlombok:lombok'
    )
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation(
            'org.springframework.boot:spring-boot-starter-test',
            'org.projectlombok:lombok'
    )
    testAnnotationProcessor 'org.projectlombok:lombok'

    testIntegrationImplementation(
            'org.springframework.boot:spring-boot-starter-test',
            'org.springframework.security:spring-security-test',
            'org.projectlombok:lombok'
    )
    testIntegrationCompile (
            'com.h2database:h2',
            'org.apache.httpcomponents:httpclient:4.5.3'
    )
    testIntegrationAnnotationProcessor 'org.projectlombok:lombok'
}

test {
    useJUnitPlatform()
}

task integrationTest(type: Test) {
    useJUnitPlatform()

    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.testIntegration.output.classesDirs
    classpath = sourceSets.testIntegration.runtimeClasspath
    shouldRunAfter test
}

check.dependsOn integrationTest